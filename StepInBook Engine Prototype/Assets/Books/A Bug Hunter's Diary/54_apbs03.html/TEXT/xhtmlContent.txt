<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>B.3 Windows Kernel Debugging</title><link rel="stylesheet" href="core.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.74.0"/></head><body><div class="sect1" title="B.3 Windows Kernel Debugging"><div class="titlepage"><div><div><h1 class="title"><a id="b.3_windows_kernel_debugging"/>B.3 Windows Kernel Debugging</h1></div></div></div><p>In order to analyze the vulnerability described in <a class="xref" href="ch06.html" title="Chapter 6. One Kernel to Rule Them All">Chapter 6</a>, I needed a way to debug the Windows kernel. I set up a debugging environment with VMware<sup>[<a href="apbs05.html#ftn.APP-B-FN-2" class="footnoteref">92</a>]</sup> and WinDbg<sup>[<a href="apbs05.html#ftn.APP-B-FN-3" class="footnoteref">93</a>]</sup> by following these steps:<a id="IDX-APP-B-0075" class="indexterm"/></p><div class="note" title="Note"><h3 class="title">Note</h3><p><span class="emphasis"><em>Throughout this section, I used the following software versions: VMware Workstation 6.5.2 and WinDbg 6.10.3.233</em></span>.</p></div><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>Step 1: Configure the VMware guest system for remote kernel debugging.<a id="IDX-APP-B-0076" class="indexterm"/></p></li><li class="listitem"><p>Step 2: Adjust the <span class="emphasis"><em>boot.ini</em></span> of the guest system.</p></li><li class="listitem"><p>Step 3: Configure WinDbg on the VMware host for Windows kernel debugging.</p></li></ul></div><div class="sect2" title="Step 1: Configure the VMware Guest System for Remote Kernel Debugging"><div class="titlepage"><div><div><h2 class="title"><a id="step_1_colon_configure_the_vmware_guest"/>Step 1: Configure the VMware Guest System for Remote Kernel Debugging</h2></div></div></div><p>After I installed a Windows XP SP3 VMware guest system, I powered it off and chose <span class="strong"><strong>Edit Virtual Machine Settings</strong></span> from the Commands section of VMware. I then clicked the <span class="strong"><strong>Add</strong></span> button to add a new serial port and chose the configuration settings shown in <a class="xref" href="apbs03.html#output_to_named_pipe" title="Figure B-1. Output to named pipe">Figure B-1</a> and <a class="xref" href="apbs03.html#named_pipe_configuration" title="Figure B-2. Named pipe configuration">Figure B-2</a>.</p><div class="figure"><a id="output_to_named_pipe"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11208"/><img src="httpatomoreillycomsourcenostarchimages939345.png.jpg" alt="Output to named pipe"/></div></div><p class="title">Figure B-1. Output to named pipe</p></div><div class="figure"><a id="named_pipe_configuration"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11216"/><img src="httpatomoreillycomsourcenostarchimages939347.png.jpg" alt="Named pipe configuration"/></div></div><p class="title">Figure B-2. Named pipe configuration</p></div><p>After the new serial port was successfully added, I selected the Yield CPU on poll checkbox of the “I/O mode” section, as shown in <a class="xref" href="apbs03.html#configuration_settings_for_the_new_seria" title="Figure B-3. Configuration settings for the new serial port">Figure B-3</a>.</p><div class="figure"><a id="configuration_settings_for_the_new_seria"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11228"/><img src="httpatomoreillycomsourcenostarchimages939349.png.jpg" alt="Configuration settings for the new serial port"/></div></div><p class="title">Figure B-3. Configuration settings for the new serial port</p></div></div><div class="sect2" title="Step 2: Adjust the boot.ini of the Guest System"><div class="titlepage"><div><div><h2 class="title"><a id="step_2_colon_adjust_the_boot.ini_of_the"/>Step 2: Adjust the boot.ini of the Guest System</h2></div></div></div><p>I then powered up the VMware guest system and edited the <span class="emphasis"><em>boot.ini</em></span> file of Windows XP to contain the following entries (the bold one enabled kernel debugging):</p><a id="I_programlisting_d1e11241"/><pre class="programlisting">[boot loader]
timeout=30
default=multi(0)disk(0)rdisk(0)partition(1)\WINDOWS
[operating systems]
multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Microsoft Windows XP
 Professional" /noexecute=optin /fastdetect
<strong class="userinput"><code>multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Microsoft</code></strong>
 <strong class="userinput"><code>Windows XP Professional - Debug" /fastdetect /debugport=com1</code></strong></pre><p>I then rebooted the guest system and chose the new entry <span class="strong"><strong>Microsoft Windows XP Professional – Debug [debugger enabled]</strong></span> from the boot menu to start the system, as shown in <a class="xref" href="apbs03.html#new_boot_menu_option" title="Figure B-4. New boot menu option">Figure B-4</a>.</p><div class="figure"><a id="new_boot_menu_option"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11258"/><img src="httpatomoreillycomsourcenostarchimages939351.png.jpg" alt="New boot menu option"/></div></div><p class="title">Figure B-4. New boot menu option</p></div></div><div class="sect2" title="Step 3: Configure WinDbg on the VMware Host for Windows Kernel Debugging"><div class="titlepage"><div><div><h2 class="title"><a id="step_3_colon_configure_windbg_on_the_vmw"/>Step 3: Configure WinDbg on the VMware Host for Windows Kernel Debugging</h2></div></div></div><p>The only thing left was to configure WinDbg on the VMware host so that it attached to the kernel of the VMware guest system using a pipe. To do this, I created a batch file with the content shown in <a class="xref" href="apbs03.html#windbg_batch_file_for_kernel_debugging" title="Figure B-5. WinDbg batch file for kernel debugging">Figure B-5</a>.</p><div class="figure"><a id="windbg_batch_file_for_kernel_debugging"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11273"/><img src="httpatomoreillycomsourcenostarchimages939353.png.jpg" alt="WinDbg batch file for kernel debugging"/></div></div><p class="title">Figure B-5. WinDbg batch file for kernel debugging</p></div><p>I then double-clicked the batch file to attach WinDbg on the VMware host to the kernel of the VMware Windows XP guest system, as shown in <a class="xref" href="apbs03.html#attaching_the_kernel_debugger_open_paren" title="Figure B-6. Attaching the kernel debugger (WinDbg)">Figure B-6</a>.<a id="IDX-APP-B-0077" class="indexterm"/><a id="IDX-APP-B-0078" class="indexterm"/></p><div class="figure"><a id="attaching_the_kernel_debugger_open_paren"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11291"/><img src="httpatomoreillycomsourcenostarchimages939355.png.jpg" alt="Attaching the kernel debugger (WinDbg)"/></div></div><p class="title">Figure B-6. Attaching the kernel debugger (WinDbg)</p></div></div></div></body></html>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>B.3 Windows Kernel Debugging</title><link rel="stylesheet" href="core.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.74.0"/></head><body><div class="sect1" title="B.3 Windows Kernel Debugging"><div class="titlepage"><div><div><h1 class="title"><a id="b.3_windows_kernel_debugging"/>B.3 Windows Kernel Debugging</h1></div></div></div><p>In order to analyze the vulnerability described in <a class="xref" href="ch06.html" title="Chapter 6. One Kernel to Rule Them All">Chapter 6</a>, I needed a way to debug the Windows kernel. I set up a debugging environment with VMware<sup>[<a href="apbs05.html#ftn.APP-B-FN-2" class="footnoteref">92</a>]</sup> and WinDbg<sup>[<a href="apbs05.html#ftn.APP-B-FN-3" class="footnoteref">93</a>]</sup> by following these steps:<a id="IDX-APP-B-0075" class="indexterm"/></p><div class="note" title="Note"><h3 class="title">Note</h3><p><span class="emphasis"><em>Throughout this section, I used the following software versions: VMware Workstation 6.5.2 and WinDbg 6.10.3.233</em></span>.</p></div><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>Step 1: Configure the VMware guest system for remote kernel debugging.<a id="IDX-APP-B-0076" class="indexterm"/></p></li><li class="listitem"><p>Step 2: Adjust the <span class="emphasis"><em>boot.ini</em></span> of the guest system.</p></li><li class="listitem"><p>Step 3: Configure WinDbg on the VMware host for Windows kernel debugging.</p></li></ul></div><div class="sect2" title="Step 1: Configure the VMware Guest System for Remote Kernel Debugging"><div class="titlepage"><div><div><h2 class="title"><a id="step_1_colon_configure_the_vmware_guest"/>Step 1: Configure the VMware Guest System for Remote Kernel Debugging</h2></div></div></div><p>After I installed a Windows XP SP3 VMware guest system, I powered it off and chose <span class="strong"><strong>Edit Virtual Machine Settings</strong></span> from the Commands section of VMware. I then clicked the <span class="strong"><strong>Add</strong></span> button to add a new serial port and chose the configuration settings shown in <a class="xref" href="apbs03.html#output_to_named_pipe" title="Figure B-1. Output to named pipe">Figure B-1</a> and <a class="xref" href="apbs03.html#named_pipe_configuration" title="Figure B-2. Named pipe configuration">Figure B-2</a>.</p><div class="figure"><a id="output_to_named_pipe"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11208"/><img src="httpatomoreillycomsourcenostarchimages939345.png.jpg" alt="Output to named pipe"/></div></div><p class="title">Figure B-1. Output to named pipe</p></div><div class="figure"><a id="named_pipe_configuration"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11216"/><img src="httpatomoreillycomsourcenostarchimages939347.png.jpg" alt="Named pipe configuration"/></div></div><p class="title">Figure B-2. Named pipe configuration</p></div><p>After the new serial port was successfully added, I selected the Yield CPU on poll checkbox of the “I/O mode” section, as shown in <a class="xref" href="apbs03.html#configuration_settings_for_the_new_seria" title="Figure B-3. Configuration settings for the new serial port">Figure B-3</a>.</p><div class="figure"><a id="configuration_settings_for_the_new_seria"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11228"/><img src="httpatomoreillycomsourcenostarchimages939349.png.jpg" alt="Configuration settings for the new serial port"/></div></div><p class="title">Figure B-3. Configuration settings for the new serial port</p></div></div><div class="sect2" title="Step 2: Adjust the boot.ini of the Guest System"><div class="titlepage"><div><div><h2 class="title"><a id="step_2_colon_adjust_the_boot.ini_of_the"/>Step 2: Adjust the boot.ini of the Guest System</h2></div></div></div><p>I then powered up the VMware guest system and edited the <span class="emphasis"><em>boot.ini</em></span> file of Windows XP to contain the following entries (the bold one enabled kernel debugging):</p><a id="I_programlisting_d1e11241"/><pre class="programlisting">[boot loader]
timeout=30
default=multi(0)disk(0)rdisk(0)partition(1)\WINDOWS
[operating systems]
multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Microsoft Windows XP
 Professional" /noexecute=optin /fastdetect
<strong class="userinput"><code>multi(0)disk(0)rdisk(0)partition(1)\WINDOWS="Microsoft</code></strong>
 <strong class="userinput"><code>Windows XP Professional - Debug" /fastdetect /debugport=com1</code></strong></pre><p>I then rebooted the guest system and chose the new entry <span class="strong"><strong>Microsoft Windows XP Professional – Debug [debugger enabled]</strong></span> from the boot menu to start the system, as shown in <a class="xref" href="apbs03.html#new_boot_menu_option" title="Figure B-4. New boot menu option">Figure B-4</a>.</p><div class="figure"><a id="new_boot_menu_option"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11258"/><img src="httpatomoreillycomsourcenostarchimages939351.png.jpg" alt="New boot menu option"/></div></div><p class="title">Figure B-4. New boot menu option</p></div></div><div class="sect2" title="Step 3: Configure WinDbg on the VMware Host for Windows Kernel Debugging"><div class="titlepage"><div><div><h2 class="title"><a id="step_3_colon_configure_windbg_on_the_vmw"/>Step 3: Configure WinDbg on the VMware Host for Windows Kernel Debugging</h2></div></div></div><p>The only thing left was to configure WinDbg on the VMware host so that it attached to the kernel of the VMware guest system using a pipe. To do this, I created a batch file with the content shown in <a class="xref" href="apbs03.html#windbg_batch_file_for_kernel_debugging" title="Figure B-5. WinDbg batch file for kernel debugging">Figure B-5</a>.</p><div class="figure"><a id="windbg_batch_file_for_kernel_debugging"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11273"/><img src="httpatomoreillycomsourcenostarchimages939353.png.jpg" alt="WinDbg batch file for kernel debugging"/></div></div><p class="title">Figure B-5. WinDbg batch file for kernel debugging</p></div><p>I then double-clicked the batch file to attach WinDbg on the VMware host to the kernel of the VMware Windows XP guest system, as shown in <a class="xref" href="apbs03.html#attaching_the_kernel_debugger_open_paren" title="Figure B-6. Attaching the kernel debugger (WinDbg)">Figure B-6</a>.<a id="IDX-APP-B-0077" class="indexterm"/><a id="IDX-APP-B-0078" class="indexterm"/></p><div class="figure"><a id="attaching_the_kernel_debugger_open_paren"/><div class="figure-contents"><div class="mediaobject"><a id="I_mediaobject_d1e11291"/><img src="httpatomoreillycomsourcenostarchimages939355.png.jpg" alt="Attaching the kernel debugger (WinDbg)"/></div></div><p class="title">Figure B-6. Attaching the kernel debugger (WinDbg)</p></div></div></div></body></html>
