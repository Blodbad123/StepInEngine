<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>1.3 Memory Errors</title><link rel="stylesheet" href="core.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.74.0"/></head><body><div class="sect1" title="1.3 Memory Errors"><div class="titlepage"><div><div><h1 class="title"><a id="memory_errors"/>1.3 Memory Errors</h1></div></div></div><p>The vulnerabilities described in this book have one thing in common: They all lead to exploitable memory errors. Such memory errors occur when a process, a thread, or the kernel is<a id="IDX-CHP-1-0009" class="indexterm"/></p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>Using memory it does not own (e.g., NULL pointer dereferences, as described in Section A.2)<a id="IDX-CHP-1-0010" class="indexterm"/></p></li><li class="listitem"><p>Using more memory than has been allocated (e.g., buffer overflows, as described in Section A.1)</p></li><li class="listitem"><p>Using uninitialized memory (e.g., uninitialized variables)<sup>[<a href="ch01s06.html#ftn.CHP-1-FN-2" class="footnoteref">2</a>]</sup><a id="IDX-CHP-1-0011" class="indexterm"/></p></li><li class="listitem"><p>Using faulty heap-memory management (e.g., double frees)<sup>[<a href="ch01s06.html#ftn.CHP-1-FN-3" class="footnoteref">3</a>]</sup><a id="IDX-CHP-1-0012" class="indexterm"/><a id="IDX-CHP-1-0013" class="indexterm"/></p></li></ul></div><p>Memory errors typically happen when powerful C/C++ features like explicit memory management or pointer arithmetic are used incorrectly.</p><p>A subcategory of memory errors, called <span class="emphasis"><em>memory corruption</em></span>, happens when a process, a thread, or the kernel modifies a memory location that it doesn’t own or when the modification corrupts the state of the memory location.<a id="IDX-CHP-1-0014" class="indexterm"/></p><p>If you’re not familiar with such memory errors, I suggest you have a look at Sections A.1, A.2, and A.3. These sections describe the basics of the programming errors and vulnerabilities discussed in this book.</p><p>In addition to exploitable memory errors, dozens of other vulnerability classes exist. These include logical errors and web-specific vulnerabilities like cross-site scripting, cross-site request forgery, and SQL injection, to name just a few. However, these other vulnerability classes are not the subject of this book. All the bugs discussed in this book were the result of exploitable memory errors.</p></div></body></html>
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head><title>1.3 Memory Errors</title><link rel="stylesheet" href="core.css" type="text/css"/><meta name="generator" content="DocBook XSL Stylesheets V1.74.0"/></head><body><div class="sect1" title="1.3 Memory Errors"><div class="titlepage"><div><div><h1 class="title"><a id="memory_errors"/>1.3 Memory Errors</h1></div></div></div><p>The vulnerabilities described in this book have one thing in common: They all lead to exploitable memory errors. Such memory errors occur when a process, a thread, or the kernel is<a id="IDX-CHP-1-0009" class="indexterm"/></p><div class="itemizedlist"><ul class="itemizedlist"><li class="listitem"><p>Using memory it does not own (e.g., NULL pointer dereferences, as described in Section A.2)<a id="IDX-CHP-1-0010" class="indexterm"/></p></li><li class="listitem"><p>Using more memory than has been allocated (e.g., buffer overflows, as described in Section A.1)</p></li><li class="listitem"><p>Using uninitialized memory (e.g., uninitialized variables)<sup>[<a href="ch01s06.html#ftn.CHP-1-FN-2" class="footnoteref">2</a>]</sup><a id="IDX-CHP-1-0011" class="indexterm"/></p></li><li class="listitem"><p>Using faulty heap-memory management (e.g., double frees)<sup>[<a href="ch01s06.html#ftn.CHP-1-FN-3" class="footnoteref">3</a>]</sup><a id="IDX-CHP-1-0012" class="indexterm"/><a id="IDX-CHP-1-0013" class="indexterm"/></p></li></ul></div><p>Memory errors typically happen when powerful C/C++ features like explicit memory management or pointer arithmetic are used incorrectly.</p><p>A subcategory of memory errors, called <span class="emphasis"><em>memory corruption</em></span>, happens when a process, a thread, or the kernel modifies a memory location that it doesn’t own or when the modification corrupts the state of the memory location.<a id="IDX-CHP-1-0014" class="indexterm"/></p><p>If you’re not familiar with such memory errors, I suggest you have a look at Sections A.1, A.2, and A.3. These sections describe the basics of the programming errors and vulnerabilities discussed in this book.</p><p>In addition to exploitable memory errors, dozens of other vulnerability classes exist. These include logical errors and web-specific vulnerabilities like cross-site scripting, cross-site request forgery, and SQL injection, to name just a few. However, these other vulnerability classes are not the subject of this book. All the bugs discussed in this book were the result of exploitable memory errors.</p></div></body></html>
